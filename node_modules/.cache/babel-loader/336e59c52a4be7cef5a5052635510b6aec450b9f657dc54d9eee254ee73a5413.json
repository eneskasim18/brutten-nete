{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enesk\\\\Desktop\\\\enestream\\\\brutten-nete\\\\src\\\\components\\\\SalaryTable\\\\SalaryTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SalaryTable.css';\nimport { calculateSalary } from '../../utils/calculateSalary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'];\nconst DEFAULT_YEAR = 2025;\nconst DEFAULT_ASGARI_UCRET = 26005.5;\nconst SalaryTable = () => {\n  _s();\n  const [grossSalaries, setGrossSalaries] = useState(Array(12).fill(''));\n  const handleGrossChange = (idx, value) => {\n    // Ham değeri olduğu gibi tut, hiç formatlama yapma\n    const newSalaries = [...grossSalaries];\n    for (let i = idx; i < newSalaries.length; i++) {\n      newSalaries[i] = value;\n    }\n    setGrossSalaries(newSalaries);\n  };\n  const handleGrossBlur = (idx, value) => {\n    // Focus kaybolduğunda formatla\n    if (value === '' || value.trim() === '') return;\n\n    // Sadece rakamları tut\n    const numbersOnly = value.replace(/[^\\d]/g, '');\n    if (numbersOnly === '') return;\n\n    // Sayıya çevir ve Türkçe formatla\n    const number = parseFloat(numbersOnly);\n    const formattedValue = number.toLocaleString('tr-TR', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n    const newSalaries = [...grossSalaries];\n    for (let i = idx; i < newSalaries.length; i++) {\n      newSalaries[i] = formattedValue;\n    }\n    setGrossSalaries(newSalaries);\n  };\n\n  // Hesaplamaları al\n  const results = calculateSalary({\n    year: DEFAULT_YEAR,\n    grossSalaries,\n    asgariUcret: DEFAULT_ASGARI_UCRET\n  });\n\n  // Toplam ve ortalama hesapla\n  const sum = key => results.reduce((acc, cur) => acc + (cur[key] || 0), 0);\n  const avg = key => results.length ? sum(key) / results.length : 0;\n\n  // Yüzde oranları (brüt ve nete göre)\n  const percent = (val, base) => base ? (val / base * 100).toFixed(1) : '0';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salary-table-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"salary-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            className: \"blue\",\n            children: \"2025\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            children: \"Br\\xFCt \\xDCcret \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"5\",\n            className: \"red\",\n            children: \"Yasal Kesintiler \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            children: \"Net \\xDCcret \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"orange\",\n            children: \"SGK + \\u0130\\u015Fsizlik\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            className: \"red\",\n            children: \"Vergi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"orange\",\n            children: \"\\xC7al\\u0131\\u015Fan SGK Primi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"orange\",\n            children: \"\\xC7al\\u0131\\u015Fan \\u0130\\u015Fsizlik Sigortas\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"red\",\n            children: \"Damga Vergisi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"red\",\n            children: \"Gelir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"red\",\n            children: \"Dilim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"red\",\n            children: \"Gelir Vergisi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [months.map((month, idx) => {\n          var _results$idx, _results$idx$B, _results$idx2, _results$idx2$C, _results$idx3, _results$idx3$F, _results$idx4, _results$idx5, _results$idx5$E, _results$idx6, _results$idx6$H;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"salary-input\",\n                type: \"text\",\n                placeholder: \"26.005,50\",\n                value: grossSalaries[idx],\n                onChange: e => handleGrossChange(idx, e.target.value),\n                onBlur: e => handleGrossBlur(idx, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx = results[idx]) === null || _results$idx === void 0 ? void 0 : (_results$idx$B = _results$idx.B) === null || _results$idx$B === void 0 ? void 0 : _results$idx$B.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx2 = results[idx]) === null || _results$idx2 === void 0 ? void 0 : (_results$idx2$C = _results$idx2.C) === null || _results$idx2$C === void 0 ? void 0 : _results$idx2$C.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx3 = results[idx]) === null || _results$idx3 === void 0 ? void 0 : (_results$idx3$F = _results$idx3.F) === null || _results$idx3$F === void 0 ? void 0 : _results$idx3$F.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx4 = results[idx]) === null || _results$idx4 === void 0 ? void 0 : _results$idx4.dilim) || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx5 = results[idx]) === null || _results$idx5 === void 0 ? void 0 : (_results$idx5$E = _results$idx5.E) === null || _results$idx5$E === void 0 ? void 0 : _results$idx5$E.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx6 = results[idx]) === null || _results$idx6 === void 0 ? void 0 : (_results$idx6$H = _results$idx6.H) === null || _results$idx6$H === void 0 ? void 0 : _results$idx6$H.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, month, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"total-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Toplam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('A').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('B').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('C').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('F').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('E').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('H').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"average-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Ortalama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('A').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('B').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('C').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('F').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('E').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('H').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"percent-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Br\\xFCt'e Oran\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"%100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('B'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('C'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('F'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('E'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('H'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"percent-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Net'e Oran\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('A'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('B'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('C'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('F'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('E'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"%100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(SalaryTable, \"xR0/X831B50QLyLkVArjTAXk5BE=\");\n_c = SalaryTable;\nexport default SalaryTable;\nvar _c;\n$RefreshReg$(_c, \"SalaryTable\");","map":{"version":3,"names":["React","useState","calculateSalary","jsxDEV","_jsxDEV","months","DEFAULT_YEAR","DEFAULT_ASGARI_UCRET","SalaryTable","_s","grossSalaries","setGrossSalaries","Array","fill","handleGrossChange","idx","value","newSalaries","i","length","handleGrossBlur","trim","numbersOnly","replace","number","parseFloat","formattedValue","toLocaleString","minimumFractionDigits","maximumFractionDigits","results","year","asgariUcret","sum","key","reduce","acc","cur","avg","percent","val","base","toFixed","className","children","rowSpan","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","map","month","_results$idx","_results$idx$B","_results$idx2","_results$idx2$C","_results$idx3","_results$idx3$F","_results$idx4","_results$idx5","_results$idx5$E","_results$idx6","_results$idx6$H","type","placeholder","onChange","e","target","onBlur","B","C","F","dilim","E","H","_c","$RefreshReg$"],"sources":["C:/Users/enesk/Desktop/enestream/brutten-nete/src/components/SalaryTable/SalaryTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SalaryTable.css';\r\nimport { calculateSalary } from '../../utils/calculateSalary';\r\n\r\nconst months = [\r\n    'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',\r\n    'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\r\n];\r\n\r\nconst DEFAULT_YEAR = 2025;\r\nconst DEFAULT_ASGARI_UCRET = 26005.5;\r\n\r\nconst SalaryTable = () => {\r\n    const [grossSalaries, setGrossSalaries] = useState(Array(12).fill(''));\r\n\r\n    const handleGrossChange = (idx, value) => {\r\n        // Ham değeri olduğu gibi tut, hiç formatlama yapma\r\n        const newSalaries = [...grossSalaries];\r\n        for (let i = idx; i < newSalaries.length; i++) {\r\n            newSalaries[i] = value;\r\n        }\r\n        setGrossSalaries(newSalaries);\r\n    };\r\n\r\n    const handleGrossBlur = (idx, value) => {\r\n        // Focus kaybolduğunda formatla\r\n        if (value === '' || value.trim() === '') return;\r\n\r\n        // Sadece rakamları tut\r\n        const numbersOnly = value.replace(/[^\\d]/g, '');\r\n        if (numbersOnly === '') return;\r\n\r\n        // Sayıya çevir ve Türkçe formatla\r\n        const number = parseFloat(numbersOnly);\r\n        const formattedValue = number.toLocaleString('tr-TR', {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2\r\n        });\r\n\r\n        const newSalaries = [...grossSalaries];\r\n        for (let i = idx; i < newSalaries.length; i++) {\r\n            newSalaries[i] = formattedValue;\r\n        }\r\n        setGrossSalaries(newSalaries);\r\n    };\r\n\r\n    // Hesaplamaları al\r\n    const results = calculateSalary({\r\n        year: DEFAULT_YEAR,\r\n        grossSalaries,\r\n        asgariUcret: DEFAULT_ASGARI_UCRET\r\n    });\r\n\r\n    // Toplam ve ortalama hesapla\r\n    const sum = (key) => results.reduce((acc, cur) => acc + (cur[key] || 0), 0);\r\n    const avg = (key) => results.length ? sum(key) / results.length : 0;\r\n\r\n    // Yüzde oranları (brüt ve nete göre)\r\n    const percent = (val, base) => base ? (val / base * 100).toFixed(1) : '0';\r\n\r\n    return (\r\n        <div className=\"salary-table-wrapper\">\r\n            <table className=\"salary-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th rowSpan=\"4\" className=\"blue\">2025</th>\r\n                        <th rowSpan=\"4\">Brüt Ücret ₺</th>\r\n                        <th colSpan=\"5\" className=\"red\">Yasal Kesintiler ₺</th>\r\n                        <th rowSpan=\"4\">Net Ücret ₺</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th colSpan=\"2\" className=\"orange\">SGK + İşsizlik</th>\r\n                        <th colSpan=\"3\" className=\"red\">Vergi</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th rowSpan=\"2\" className=\"orange\">Çalışan SGK Primi</th>\r\n                        <th rowSpan=\"2\" className=\"orange\">Çalışan İşsizlik Sigortası</th>\r\n                        <th rowSpan=\"2\" className=\"red\">Damga Vergisi</th>\r\n                        <th colSpan=\"2\" className=\"red\">Gelir</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className=\"red\">Dilim</th>\r\n                        <th className=\"red\">Gelir Vergisi</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {months.map((month, idx) => (\r\n                        <tr key={month}>\r\n                            <td>{month}</td>\r\n                            <td>\r\n                                <input\r\n                                    className=\"salary-input\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"26.005,50\"\r\n                                    value={grossSalaries[idx]}\r\n                                    onChange={e => handleGrossChange(idx, e.target.value)}\r\n                                    onBlur={e => handleGrossBlur(idx, e.target.value)}\r\n                                />\r\n                            </td>\r\n                            <td>{results[idx]?.B?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\r\n                            <td>{results[idx]?.C?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\r\n                            <td>{results[idx]?.F?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\r\n                            <td>{results[idx]?.dilim || '-'}</td>\r\n                            <td>{results[idx]?.E?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\r\n                            <td>{results[idx]?.H?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\r\n                        </tr>\r\n                    ))}\r\n                    <tr className=\"total-row\">\r\n                        <td>Toplam</td>\r\n                        <td>{sum('A').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{sum('B').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{sum('C').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{sum('F').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>-</td>\r\n                        <td>{sum('E').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{sum('H').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                    </tr>\r\n                    <tr className=\"average-row\">\r\n                        <td>Ortalama</td>\r\n                        <td>{avg('A').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{avg('B').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{avg('C').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{avg('F').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>-</td>\r\n                        <td>{avg('E').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                        <td>{avg('H').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n                    </tr>\r\n                    <tr className=\"percent-row\">\r\n                        <td>Brüt'e Oranı</td>\r\n                        <td>%100</td>\r\n                        <td>{percent(sum('B'), sum('A'))}%</td>\r\n                        <td>{percent(sum('C'), sum('A'))}%</td>\r\n                        <td>{percent(sum('F'), sum('A'))}%</td>\r\n                        <td>-</td>\r\n                        <td>{percent(sum('E'), sum('A'))}%</td>\r\n                        <td>{percent(sum('H'), sum('A'))}%</td>\r\n                    </tr>\r\n                    <tr className=\"percent-row\">\r\n                        <td>Net'e Oranı</td>\r\n                        <td>{percent(sum('A'), sum('H'))}%</td>\r\n                        <td>{percent(sum('B'), sum('H'))}%</td>\r\n                        <td>{percent(sum('C'), sum('H'))}%</td>\r\n                        <td>{percent(sum('F'), sum('H'))}%</td>\r\n                        <td>-</td>\r\n                        <td>{percent(sum('E'), sum('H'))}%</td>\r\n                        <td>%100</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalaryTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}