{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enesk\\\\Desktop\\\\enestream\\\\brutten-nete\\\\src\\\\components\\\\SalaryTable\\\\SalaryTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SalaryTable.css';\nimport { calculateSalary } from '../../utils/calculateSalary';\nimport HamburgerMenu from '../HamburgerMenu/HamburgerMenu';\nimport FutureYearForm from '../FutureYearForm/FutureYearForm';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'];\nconst DEFAULT_YEAR = 2025;\nconst DEFAULT_ASGARI_UCRET = 26005.5;\nconst SalaryTable = () => {\n  _s();\n  const [grossSalaries, setGrossSalaries] = useState(Array(12).fill(''));\n  const [showFutureYearForm, setShowFutureYearForm] = useState(false);\n  const [currentYear, setCurrentYear] = useState(DEFAULT_YEAR);\n  const [savedYears, setSavedYears] = useState({}); // Birden fazla yılı sakla\n  const [editMode, setEditMode] = useState(false);\n  const [editingYear, setEditingYear] = useState(null); // Hangi yılı düzenliyoruz\n\n  const handleGrossChange = (idx, value) => {\n    const newSalaries = [...grossSalaries];\n    for (let i = idx; i < newSalaries.length; i++) {\n      newSalaries[i] = value;\n    }\n    setGrossSalaries(newSalaries);\n  };\n  const handleFutureYearSubmit = ({\n    year,\n    taxRates,\n    exemptions,\n    inflation\n  }) => {\n    // Yeni yılı kaydet\n    setSavedYears(prev => ({\n      ...prev,\n      [year]: {\n        taxRates,\n        exemptions,\n        inflation\n      }\n    }));\n    setCurrentYear(year);\n    setShowFutureYearForm(false);\n    setEditMode(false);\n    setEditingYear(null);\n  };\n  const resetToDefault = () => {\n    setCurrentYear(DEFAULT_YEAR);\n    setSavedYears({});\n    setEditMode(false);\n    setEditingYear(null);\n  };\n  const handleEditRates = year => {\n    setEditingYear(year);\n    setEditMode(true);\n    setShowFutureYearForm(true);\n  };\n  const handleNewYear = () => {\n    setEditMode(false);\n    setEditingYear(null);\n    setShowFutureYearForm(true);\n  };\n  const switchToYear = year => {\n    setCurrentYear(year);\n  };\n\n  // Mevcut yılın verilerini al\n  const getCurrentYearData = () => {\n    if (currentYear === DEFAULT_YEAR) {\n      return {\n        customRates: null,\n        customExemptions: null\n      };\n    }\n    const yearData = savedYears[currentYear];\n    return {\n      customRates: (yearData === null || yearData === void 0 ? void 0 : yearData.taxRates) || null,\n      customExemptions: (yearData === null || yearData === void 0 ? void 0 : yearData.exemptions) || null\n    };\n  };\n  const {\n    customRates,\n    customExemptions\n  } = getCurrentYearData();\n\n  // Hesaplamaları al\n  const results = calculateSalary({\n    year: currentYear,\n    grossSalaries,\n    asgariUcret: DEFAULT_ASGARI_UCRET,\n    customRates,\n    customExemptions\n  });\n\n  // Toplam ve ortalama hesapla\n  const sum = key => results.reduce((acc, cur) => acc + (cur[key] || 0), 0);\n  const avg = key => results.length ? sum(key) / results.length : 0;\n\n  // Yüzde oranları (brüt ve nete göre)\n  const percent = (val, base) => base ? (val / base * 100).toFixed(1) : '0';\n\n  // Excel export fonksiyonu\n  const exportToExcel = () => {\n    // Excel için veri hazırla\n    const excelData = [];\n\n    // Başlık satırı\n    excelData.push([`${currentYear} YILI MAAŞ HESAPLAMALARI`, '', '', '', '', '', '', '']);\n\n    // Boş satır\n    excelData.push(['', '', '', '', '', '', '', '']);\n\n    // Tablo başlıkları\n    excelData.push(['AY', 'BRÜT ÜCRET (₺)', 'ÇALIŞAN SGK PRİMİ (₺)', 'ÇALIŞAN İŞSİZLİK SİGORTASI (₺)', 'DAMGA VERGİSİ (₺)', 'GELİR VERGİSİ DİLİMİ', 'GELİR VERGİSİ (₺)', 'NET ÜCRET (₺)']);\n\n    // Aylık veriler\n    months.forEach((month, idx) => {\n      const result = results[idx] || {};\n      excelData.push([month, result.A || 0, result.B || 0, result.C || 0, result.F || 0, result.dilim || '-', result.E || 0, result.H || 0]);\n    });\n\n    // Boş satır\n    excelData.push(['', '', '', '', '', '', '', '']);\n\n    // Toplam satırı\n    excelData.push(['TOPLAM', sum('A'), sum('B'), sum('C'), sum('F'), '-', sum('E'), sum('H')]);\n\n    // Ortalama satırı\n    excelData.push(['ORTALAMA', avg('A'), avg('B'), avg('C'), avg('F'), '-', avg('E'), avg('H')]);\n\n    // Boş satır\n    excelData.push(['', '', '', '', '', '', '', '']);\n\n    // Yüzde oranları\n    excelData.push(['BRÜT\\'E ORANI (%)', '100', percent(sum('B'), sum('A')), percent(sum('C'), sum('A')), percent(sum('F'), sum('A')), '-', percent(sum('E'), sum('A')), percent(sum('H'), sum('A'))]);\n    excelData.push(['NET\\'E ORANI (%)', percent(sum('A'), sum('H')), percent(sum('B'), sum('H')), percent(sum('C'), sum('H')), percent(sum('F'), sum('H')), '-', percent(sum('E'), sum('H')), '100']);\n\n    // Workbook oluştur\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.aoa_to_sheet(excelData);\n\n    // Sütun genişlikleri ayarla\n    ws['!cols'] = [{\n      width: 12\n    },\n    // Ay\n    {\n      width: 15\n    },\n    // Brüt Ücret\n    {\n      width: 18\n    },\n    // SGK Primi\n    {\n      width: 20\n    },\n    // İşsizlik Sigortası\n    {\n      width: 15\n    },\n    // Damga Vergisi\n    {\n      width: 15\n    },\n    // Gelir Vergisi Dilimi\n    {\n      width: 15\n    },\n    // Gelir Vergisi\n    {\n      width: 15\n    } // Net Ücret\n    ];\n\n    // Worksheet'i workbook'a ekle\n    XLSX.utils.book_append_sheet(wb, ws, `${currentYear} Maaş Hesabı`);\n\n    // Dosyayı indir\n    const fileName = `${currentYear}_maas_hesaplama_${new Date().toISOString().split('T')[0]}.xlsx`;\n    XLSX.writeFile(wb, fileName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"salary-table-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {\n      onFutureYearClick: handleNewYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), showFutureYearForm && /*#__PURE__*/_jsxDEV(FutureYearForm, {\n      onSubmit: handleFutureYearSubmit,\n      onClose: () => {\n        setShowFutureYearForm(false);\n        setEditMode(false);\n      },\n      savedYears: savedYears,\n      initialValues: editMode && editingYear && savedYears[editingYear] ? {\n        year: editingYear,\n        taxRates: savedYears[editingYear].taxRates,\n        exemptions: savedYears[editingYear].exemptions,\n        inflation: savedYears[editingYear].inflation\n      } : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentYear, \" Y\\u0131l\\u0131 Hesaplamas\\u0131\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-buttons\",\n        children: [Object.keys(savedYears).length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"year-selector\",\n          value: currentYear,\n          onChange: e => switchToYear(parseInt(e.target.value)),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: DEFAULT_YEAR,\n            children: \"2025 (Varsay\\u0131lan)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), Object.keys(savedYears).sort().map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [year, \" (\\xD6zel)\"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"export-btn\",\n          onClick: exportToExcel,\n          children: \"\\uD83D\\uDCCA Excel \\u0130ndir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), currentYear !== DEFAULT_YEAR && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetToDefault,\n          children: \"2025'e D\\xF6n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), customRates && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-rates-btn\",\n          onClick: () => handleEditRates(currentYear),\n          children: [currentYear, \" Vergi Oranlar\\u0131n\\u0131 D\\xFCzenle\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"salary-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            className: \"blue\",\n            children: currentYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            children: \"Br\\xFCt \\xDCcret \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"5\",\n            className: \"red\",\n            children: \"Yasal Kesintiler \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"4\",\n            children: \"Net \\xDCcret \\u20BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"orange\",\n            children: \"SGK + \\u0130\\u015Fsizlik\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"3\",\n            className: \"red\",\n            children: \"Vergi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"orange\",\n            children: \"\\xC7al\\u0131\\u015Fan SGK Primi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"orange\",\n            children: \"\\xC7al\\u0131\\u015Fan \\u0130\\u015Fsizlik Sigortas\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            rowSpan: \"2\",\n            className: \"red\",\n            children: \"Damga Vergisi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"2\",\n            className: \"red\",\n            children: \"Gelir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"red\",\n            children: \"Dilim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"red\",\n            children: \"Gelir Vergisi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [months.map((month, idx) => {\n          var _results$idx, _results$idx$B, _results$idx2, _results$idx2$C, _results$idx3, _results$idx3$F, _results$idx4, _results$idx5, _results$idx5$E, _results$idx6, _results$idx6$H;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"salary-input\",\n                type: \"text\",\n                placeholder: \"26.005,50\",\n                value: grossSalaries[idx],\n                onChange: e => handleGrossChange(idx, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx = results[idx]) === null || _results$idx === void 0 ? void 0 : (_results$idx$B = _results$idx.B) === null || _results$idx$B === void 0 ? void 0 : _results$idx$B.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx2 = results[idx]) === null || _results$idx2 === void 0 ? void 0 : (_results$idx2$C = _results$idx2.C) === null || _results$idx2$C === void 0 ? void 0 : _results$idx2$C.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx3 = results[idx]) === null || _results$idx3 === void 0 ? void 0 : (_results$idx3$F = _results$idx3.F) === null || _results$idx3$F === void 0 ? void 0 : _results$idx3$F.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx4 = results[idx]) === null || _results$idx4 === void 0 ? void 0 : _results$idx4.dilim) || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx5 = results[idx]) === null || _results$idx5 === void 0 ? void 0 : (_results$idx5$E = _results$idx5.E) === null || _results$idx5$E === void 0 ? void 0 : _results$idx5$E.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_results$idx6 = results[idx]) === null || _results$idx6 === void 0 ? void 0 : (_results$idx6$H = _results$idx6.H) === null || _results$idx6$H === void 0 ? void 0 : _results$idx6$H.toLocaleString('tr-TR', {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })) || '0,00'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this)]\n          }, month, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"total-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Toplam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('A').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('B').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('C').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('F').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('E').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: sum('H').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"average-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Ortalama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('A').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('B').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('C').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('F').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('E').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: avg('H').toLocaleString('tr-TR', {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"percent-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Br\\xFCt'e Oran\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"%100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('B'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('C'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('F'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('E'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('H'), sum('A')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"percent-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Net'e Oran\\u0131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('A'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('B'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('C'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('F'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [percent(sum('E'), sum('H')), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"%100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 9\n  }, this);\n};\n_s(SalaryTable, \"8sUxOZOGct91rh1/rrnP4QdatZw=\");\n_c = SalaryTable;\nexport default SalaryTable;\nvar _c;\n$RefreshReg$(_c, \"SalaryTable\");","map":{"version":3,"names":["React","useState","calculateSalary","HamburgerMenu","FutureYearForm","XLSX","jsxDEV","_jsxDEV","months","DEFAULT_YEAR","DEFAULT_ASGARI_UCRET","SalaryTable","_s","grossSalaries","setGrossSalaries","Array","fill","showFutureYearForm","setShowFutureYearForm","currentYear","setCurrentYear","savedYears","setSavedYears","editMode","setEditMode","editingYear","setEditingYear","handleGrossChange","idx","value","newSalaries","i","length","handleFutureYearSubmit","year","taxRates","exemptions","inflation","prev","resetToDefault","handleEditRates","handleNewYear","switchToYear","getCurrentYearData","customRates","customExemptions","yearData","results","asgariUcret","sum","key","reduce","acc","cur","avg","percent","val","base","toFixed","exportToExcel","excelData","push","forEach","month","result","A","B","C","F","dilim","E","H","wb","utils","book_new","ws","aoa_to_sheet","width","book_append_sheet","fileName","Date","toISOString","split","writeFile","className","children","onFutureYearClick","_jsxFileName","lineNumber","columnNumber","onSubmit","onClose","initialValues","Object","keys","onChange","e","parseInt","target","sort","map","onClick","rowSpan","colSpan","_results$idx","_results$idx$B","_results$idx2","_results$idx2$C","_results$idx3","_results$idx3$F","_results$idx4","_results$idx5","_results$idx5$E","_results$idx6","_results$idx6$H","type","placeholder","toLocaleString","minimumFractionDigits","maximumFractionDigits","_c","$RefreshReg$"],"sources":["C:/Users/enesk/Desktop/enestream/brutten-nete/src/components/SalaryTable/SalaryTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SalaryTable.css';\nimport { calculateSalary } from '../../utils/calculateSalary';\nimport HamburgerMenu from '../HamburgerMenu/HamburgerMenu';\nimport FutureYearForm from '../FutureYearForm/FutureYearForm';\nimport * as XLSX from 'xlsx';\n\nconst months = [\n    'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',\n    'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\n];\n\nconst DEFAULT_YEAR = 2025;\nconst DEFAULT_ASGARI_UCRET = 26005.5;\n\nconst SalaryTable = () => {\n    const [grossSalaries, setGrossSalaries] = useState(Array(12).fill(''));\n    const [showFutureYearForm, setShowFutureYearForm] = useState(false);\n    const [currentYear, setCurrentYear] = useState(DEFAULT_YEAR);\n    const [savedYears, setSavedYears] = useState({}); // Birden fazla yılı sakla\n    const [editMode, setEditMode] = useState(false);\n    const [editingYear, setEditingYear] = useState(null); // Hangi yılı düzenliyoruz\n\n    const handleGrossChange = (idx, value) => {\n        const newSalaries = [...grossSalaries];\n        for (let i = idx; i < newSalaries.length; i++) {\n            newSalaries[i] = value;\n        }\n        setGrossSalaries(newSalaries);\n    };\n\n    const handleFutureYearSubmit = ({ year, taxRates, exemptions, inflation }) => {\n        // Yeni yılı kaydet\n        setSavedYears(prev => ({\n            ...prev,\n            [year]: { taxRates, exemptions, inflation }\n        }));\n        setCurrentYear(year);\n        setShowFutureYearForm(false);\n        setEditMode(false);\n        setEditingYear(null);\n    };\n\n    const resetToDefault = () => {\n        setCurrentYear(DEFAULT_YEAR);\n        setSavedYears({});\n        setEditMode(false);\n        setEditingYear(null);\n    };\n\n    const handleEditRates = (year) => {\n        setEditingYear(year);\n        setEditMode(true);\n        setShowFutureYearForm(true);\n    };\n\n    const handleNewYear = () => {\n        setEditMode(false);\n        setEditingYear(null);\n        setShowFutureYearForm(true);\n    };\n\n    const switchToYear = (year) => {\n        setCurrentYear(year);\n    };\n\n    // Mevcut yılın verilerini al\n    const getCurrentYearData = () => {\n        if (currentYear === DEFAULT_YEAR) {\n            return { customRates: null, customExemptions: null };\n        }\n        const yearData = savedYears[currentYear];\n        return {\n            customRates: yearData?.taxRates || null,\n            customExemptions: yearData?.exemptions || null\n        };\n    };\n\n    const { customRates, customExemptions } = getCurrentYearData();\n\n    // Hesaplamaları al\n    const results = calculateSalary({\n        year: currentYear,\n        grossSalaries,\n        asgariUcret: DEFAULT_ASGARI_UCRET,\n        customRates,\n        customExemptions\n    });\n\n    // Toplam ve ortalama hesapla\n    const sum = (key) => results.reduce((acc, cur) => acc + (cur[key] || 0), 0);\n    const avg = (key) => results.length ? sum(key) / results.length : 0;\n\n    // Yüzde oranları (brüt ve nete göre)\n    const percent = (val, base) => base ? (val / base * 100).toFixed(1) : '0';\n\n    // Excel export fonksiyonu\n    const exportToExcel = () => {\n        // Excel için veri hazırla\n        const excelData = [];\n\n        // Başlık satırı\n        excelData.push([\n            `${currentYear} YILI MAAŞ HESAPLAMALARI`,\n            '', '', '', '', '', '', ''\n        ]);\n\n        // Boş satır\n        excelData.push(['', '', '', '', '', '', '', '']);\n\n        // Tablo başlıkları\n        excelData.push([\n            'AY',\n            'BRÜT ÜCRET (₺)',\n            'ÇALIŞAN SGK PRİMİ (₺)',\n            'ÇALIŞAN İŞSİZLİK SİGORTASI (₺)',\n            'DAMGA VERGİSİ (₺)',\n            'GELİR VERGİSİ DİLİMİ',\n            'GELİR VERGİSİ (₺)',\n            'NET ÜCRET (₺)'\n        ]);\n\n        // Aylık veriler\n        months.forEach((month, idx) => {\n            const result = results[idx] || {};\n            excelData.push([\n                month,\n                result.A || 0,\n                result.B || 0,\n                result.C || 0,\n                result.F || 0,\n                result.dilim || '-',\n                result.E || 0,\n                result.H || 0\n            ]);\n        });\n\n        // Boş satır\n        excelData.push(['', '', '', '', '', '', '', '']);\n\n        // Toplam satırı\n        excelData.push([\n            'TOPLAM',\n            sum('A'),\n            sum('B'),\n            sum('C'),\n            sum('F'),\n            '-',\n            sum('E'),\n            sum('H')\n        ]);\n\n        // Ortalama satırı\n        excelData.push([\n            'ORTALAMA',\n            avg('A'),\n            avg('B'),\n            avg('C'),\n            avg('F'),\n            '-',\n            avg('E'),\n            avg('H')\n        ]);\n\n        // Boş satır\n        excelData.push(['', '', '', '', '', '', '', '']);\n\n        // Yüzde oranları\n        excelData.push([\n            'BRÜT\\'E ORANI (%)',\n            '100',\n            percent(sum('B'), sum('A')),\n            percent(sum('C'), sum('A')),\n            percent(sum('F'), sum('A')),\n            '-',\n            percent(sum('E'), sum('A')),\n            percent(sum('H'), sum('A'))\n        ]);\n\n        excelData.push([\n            'NET\\'E ORANI (%)',\n            percent(sum('A'), sum('H')),\n            percent(sum('B'), sum('H')),\n            percent(sum('C'), sum('H')),\n            percent(sum('F'), sum('H')),\n            '-',\n            percent(sum('E'), sum('H')),\n            '100'\n        ]);\n\n        // Workbook oluştur\n        const wb = XLSX.utils.book_new();\n        const ws = XLSX.utils.aoa_to_sheet(excelData);\n\n        // Sütun genişlikleri ayarla\n        ws['!cols'] = [\n            { width: 12 }, // Ay\n            { width: 15 }, // Brüt Ücret\n            { width: 18 }, // SGK Primi\n            { width: 20 }, // İşsizlik Sigortası\n            { width: 15 }, // Damga Vergisi\n            { width: 15 }, // Gelir Vergisi Dilimi\n            { width: 15 }, // Gelir Vergisi\n            { width: 15 }  // Net Ücret\n        ];\n\n        // Worksheet'i workbook'a ekle\n        XLSX.utils.book_append_sheet(wb, ws, `${currentYear} Maaş Hesabı`);\n\n        // Dosyayı indir\n        const fileName = `${currentYear}_maas_hesaplama_${new Date().toISOString().split('T')[0]}.xlsx`;\n        XLSX.writeFile(wb, fileName);\n    };\n\n    return (\n        <div className=\"salary-table-wrapper\">\n            <HamburgerMenu onFutureYearClick={handleNewYear} />\n\n            {showFutureYearForm && (\n                <FutureYearForm\n                    onSubmit={handleFutureYearSubmit}\n                    onClose={() => {\n                        setShowFutureYearForm(false);\n                        setEditMode(false);\n                    }}\n                    savedYears={savedYears}\n                    initialValues={editMode && editingYear && savedYears[editingYear] ? {\n                        year: editingYear,\n                        taxRates: savedYears[editingYear].taxRates,\n                        exemptions: savedYears[editingYear].exemptions,\n                        inflation: savedYears[editingYear].inflation\n                    } : null}\n                />\n            )}\n\n            <div className=\"year-info\">\n                <h2>{currentYear} Yılı Hesaplaması</h2>\n                <div className=\"year-buttons\">\n                    {/* Yıl seçici dropdown */}\n                    {Object.keys(savedYears).length > 0 && (\n                        <select\n                            className=\"year-selector\"\n                            value={currentYear}\n                            onChange={(e) => switchToYear(parseInt(e.target.value))}\n                        >\n                            <option value={DEFAULT_YEAR}>2025 (Varsayılan)</option>\n                            {Object.keys(savedYears).sort().map(year => (\n                                <option key={year} value={year}>\n                                    {year} (Özel)\n                                </option>\n                            ))}\n                        </select>\n                    )}\n\n                    {/* Export butonu */}\n                    <button className=\"export-btn\" onClick={exportToExcel}>\n                        📊 Excel İndir\n                    </button>\n\n                    {currentYear !== DEFAULT_YEAR && (\n                        <button className=\"reset-btn\" onClick={resetToDefault}>\n                            2025'e Dön\n                        </button>\n                    )}\n                    {customRates && (\n                        <button className=\"edit-rates-btn\" onClick={() => handleEditRates(currentYear)}>\n                            {currentYear} Vergi Oranlarını Düzenle\n                        </button>\n                    )}\n                </div>\n            </div>\n\n            <table className=\"salary-table\">\n                <thead>\n                    <tr>\n                        <th rowSpan=\"4\" className=\"blue\">{currentYear}</th>\n                        <th rowSpan=\"4\">Brüt Ücret ₺</th>\n                        <th colSpan=\"5\" className=\"red\">Yasal Kesintiler ₺</th>\n                        <th rowSpan=\"4\">Net Ücret ₺</th>\n                    </tr>\n                    <tr>\n                        <th colSpan=\"2\" className=\"orange\">SGK + İşsizlik</th>\n                        <th colSpan=\"3\" className=\"red\">Vergi</th>\n                    </tr>\n                    <tr>\n                        <th rowSpan=\"2\" className=\"orange\">Çalışan SGK Primi</th>\n                        <th rowSpan=\"2\" className=\"orange\">Çalışan İşsizlik Sigortası</th>\n                        <th rowSpan=\"2\" className=\"red\">Damga Vergisi</th>\n                        <th colSpan=\"2\" className=\"red\">Gelir</th>\n                    </tr>\n                    <tr>\n                        <th className=\"red\">Dilim</th>\n                        <th className=\"red\">Gelir Vergisi</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {months.map((month, idx) => (\n                        <tr key={month}>\n                            <td>{month}</td>\n                            <td>\n                                <input\n                                    className=\"salary-input\"\n                                    type=\"text\"\n                                    placeholder=\"26.005,50\"\n                                    value={grossSalaries[idx]}\n                                    onChange={e => handleGrossChange(idx, e.target.value)}\n                                />\n                            </td>\n                            <td>{results[idx]?.B?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\n                            <td>{results[idx]?.C?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\n                            <td>{results[idx]?.F?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\n                            <td>{results[idx]?.dilim || '-'}</td>\n                            <td>{results[idx]?.E?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\n                            <td>{results[idx]?.H?.toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 }) || '0,00'}</td>\n                        </tr>\n                    ))}\n\n                    <tr className=\"total-row\">\n                        <td>Toplam</td>\n                        <td>{sum('A').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{sum('B').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{sum('C').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{sum('F').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>-</td>\n                        <td>{sum('E').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{sum('H').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    </tr>\n                    <tr className=\"average-row\">\n                        <td>Ortalama</td>\n                        <td>{avg('A').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{avg('B').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{avg('C').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{avg('F').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>-</td>\n                        <td>{avg('E').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                        <td>{avg('H').toLocaleString('tr-TR', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n                    </tr>\n\n                    <tr className=\"percent-row\">\n                        <td>Brüt'e Oranı</td>\n                        <td>%100</td>\n                        <td>{percent(sum('B'), sum('A'))}%</td>\n                        <td>{percent(sum('C'), sum('A'))}%</td>\n                        <td>{percent(sum('F'), sum('A'))}%</td>\n                        <td>-</td>\n                        <td>{percent(sum('E'), sum('A'))}%</td>\n                        <td>{percent(sum('H'), sum('A'))}%</td>\n                    </tr>\n                    <tr className=\"percent-row\">\n                        <td>Net'e Oranı</td>\n                        <td>{percent(sum('A'), sum('H'))}%</td>\n                        <td>{percent(sum('B'), sum('H'))}%</td>\n                        <td>{percent(sum('C'), sum('H'))}%</td>\n                        <td>{percent(sum('F'), sum('H'))}%</td>\n                        <td>-</td>\n                        <td>{percent(sum('E'), sum('H'))}%</td>\n                        <td>%100</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default SalaryTable; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}